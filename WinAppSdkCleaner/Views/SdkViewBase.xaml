<UserControl x:Class="WinAppSdkCleaner.Views.SdkViewBase"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WinAppSdkCleaner.Views"
             xmlns:vm="clr-namespace:WinAppSdkCleaner.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800">
    
    <UserControl.Resources>
        <local:ViewCommand x:Key="Rescan"/>
        <local:ViewCommand x:Key="Remove"/>
        <local:ViewCommand x:Key="Copy"/>

        <SolidColorBrush x:Key="SelectedFocusedTextColour" Color="White"/>
        <SolidColorBrush x:Key="SelectedUnFocusedTextColour" Color="Gray"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="100"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.RowSpan="2" Margin="20,20,20,10" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TreeView ItemsSource="{Binding SdkList, Mode=OneWay}" SelectedItemChanged="SelectedTreeViewItemChanged">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=OneWay}"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type vm:SdkItem}" ItemsSource="{Binding Children, Mode=OneWay}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="HeadingTextBox" Text="{Binding HeadingText, Mode=OneTime}" ToolTip="{Binding ToolTipText, Mode=OneTime}" FontWeight="SemiBold" Foreground="Blue"/>
                        </Grid>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                <Setter TargetName="HeadingTextBox" Property="Foreground" Value="{StaticResource SelectedFocusedTextColour}"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True"/>
                                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="HeadingTextBox" Property="Foreground" Value="{StaticResource SelectedUnFocusedTextColour}"/>
                            </MultiDataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type vm:DependentsItem}" ItemsSource="{Binding Children, Mode=OneWay}">
                        <TextBlock x:Name="HeadingTextBox" Text="{Binding HeadingText, Mode=OneTime}" ToolTip="{Binding ToolTipText, Mode=OneTime}" Padding="5,0,0,0"/>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                <Setter TargetName="HeadingTextBox" Property="Foreground" Value="{StaticResource SelectedFocusedTextColour}"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True"/>
                                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="HeadingTextBox" Property="Foreground" Value="{StaticResource SelectedUnFocusedTextColour}"/>
                            </MultiDataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                    
                    <HierarchicalDataTemplate DataType="{x:Type vm:ItemBase}" ItemsSource="{Binding Children, Mode=OneWay}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Height="16" Source="{Binding Logo, Mode=OneTime}"/>
                            <TextBlock Grid.Column="1" x:Name="HeadingTextBox" Text="{Binding HeadingText, Mode=OneTime}" ToolTip="{Binding ToolTipText, Mode=OneTime}" Padding="5,0,0,0"/>
                        </Grid>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                <Setter TargetName="HeadingTextBox" Property="Foreground" Value="{StaticResource SelectedFocusedTextColour}"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True"/>
                                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="HeadingTextBox" Property="Foreground" Value="{StaticResource SelectedUnFocusedTextColour}"/>
                            </MultiDataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>

                <TreeView.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.InputBindings>
                            <KeyBinding Command="{StaticResource Copy}" Modifiers="Control" Key="C"/>
                            <!-- remove is intensionally omitted -->
                        </ContextMenu.InputBindings>
                        <MenuItem Header="Copy" Command="{StaticResource Copy}" InputGestureText="Ctrl+C">
                            <MenuItem.Icon>
                                <TextBlock Text="&#xE16F;" FontFamily="Segoe MDL2 Assets" FontSize="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Remove" Command="{StaticResource Remove}">
                            <MenuItem.Icon>
                                <Path Data="M3,3 L13,13 M3,13 L13,3" Stroke="Red" StrokeThickness="1.25" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </TreeView.ContextMenu>
                <TreeView.InputBindings>
                    <KeyBinding Command="{StaticResource Copy}" Modifiers="Control" Key="C"/>
                    <!-- remove is intensionally omitted -->
                </TreeView.InputBindings>
            </TreeView>
            <ProgressBar Grid.Row="1" Height="3" HorizontalAlignment="Stretch" x:Name="BusyIndicator" IsIndeterminate="false" Background="Transparent" BorderThickness="0"/>
        </Grid>

        <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Margin="0,20,20,40">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="0,15,0,0"/>
                </Style>
            </StackPanel.Resources>

            <Button Content="_Rescan" Command="{StaticResource Rescan}"/>
            <Button Content="Remo_ve" Command="{StaticResource Remove}"/>
        </StackPanel>

    </Grid>
</UserControl>

